ip a 
iwctl
  station wlan0 connect Wi-Fi

fdisk -l
fdisk /dev/nvme0n1
  g
  w
cfdisk /dev/nvme0n1
  efi 512M
  linux filesystem rest
mkfs.vfat /dev/nvme0n1p1
mkfs.btrfs -L "Arch Linux" /dev/nvme0n1p2 # -L is for refind

# for snapper (for timeshift use landout for archwiki)
mount /dev/nvme0n1p2 /mnt
btrfs subvolume create /mnt/@
btrfs subvolume create /mnt/@home
btrfs subvolume create /mnt/@.snapshots
btrfs subvolume create /mnt/@.swap
btrfs subvolume create /mnt/@srv
btrfs subvolume create /mnt/@var_log
btrfs subvolume create /mnt/@var_cache
umount /mnt
mount -o noatime,compress=zstd,subvol=@ /dev/nvme0n1p2 /mnt
mkdir -p /mnt/home
mkdir -p /mnt/.swap
mkdir -p /mnt/.snapshots
mkdir -p /mnt/srv
mkdir -p /mnt/var/log
mkdir -p /mnt/var/cache
umount -R /mnt
mount -o noatime,compress=zstd,subvol=@ /dev/nvme0n1p2 /mnt
mount -o noatime,compress=zstd,subvol=@home /dev/nvme0n1p2 /mnt/home
mount -o noatime,compress=zstd,subvol=@.snapshots /dev/nvme0n1p2 /mnt/.snapshots
mount -o noatime,nodatacow,subvol=@.swap /dev/nvme0n1p2 /mnt/.swap
mount -o noatime,compress=zstd,subvol=@var_log /dev/nvme0n1p2 /mnt/var/log
mount -o noatime,compress=zstd,subvol=@var_cache /dev/nvme0n1p2 /mnt/var/cache
mount /dev/nvme0n1p1 /mnt/efi
btrfs filesystem mkswapfile --size 4g --uuid clear /mnt/swap/swapfile
swapon /mnt/swap/swapfile 
genfstab -U /mnt >> /mnt/etc/fstab
vim /mnt/etc/fstab 
||
# <file system> <dir> <type> <options> <dump> <pass>
# /dev/nvme0n1p2
UUID=a27ab598-dfd9-4fc5-ac64-efe8d895a9d4	/         	btrfs     	rw,noatime,compress=zstd:3,ssd,discard=async,space_cache=v2,subvolid=256,subvol=/@	0 0

# /dev/nvme0n1p2
UUID=a27ab598-dfd9-4fc5-ac64-efe8d895a9d4	/home     	btrfs     	rw,noatime,compress=zstd:3,ssd,discard=async,space_cache=v2,subvolid=257,subvol=/@home	0 0

# /dev/nvme0n1p2
UUID=a27ab598-dfd9-4fc5-ac64-efe8d895a9d4	/.snapshots	btrfs     	rw,noatime,compress=zstd:3,ssd,discard=async,space_cache=v2,subvolid=258,subvol=/@.snapshots	0 0

# /dev/nvme0n1p2
UUID=a27ab598-dfd9-4fc5-ac64-efe8d895a9d4	/.swap    	btrfs     	rw,noatime,nodatacow,ssd,discard=async,space_cache=v2,subvolid=259,subvol=/@.swap	0 0

# /dev/nvme0n1p2
UUID=a27ab598-dfd9-4fc5-ac64-efe8d895a9d4	/srv    	btrfs     	rw,noatime,compress=zstd:3,ssd,discard=async,space_cache=v2,subvolid=260,subvol=/@srv	0 0

# /dev/nvme0n1p2
UUID=a27ab598-dfd9-4fc5-ac64-efe8d895a9d4	/var/log  	btrfs     	rw,noatime,compress=zstd:3,ssd,discard=async,space_cache=v2,subvolid=261,subvol=/@var_log	0 0

# /dev/nvme0n1p2
UUID=a27ab598-dfd9-4fc5-ac64-efe8d895a9d4	/var/cache	btrfs     	rw,noatime,compress=zstd:3,ssd,discard=async,space_cache=v2,subvolid=262,subvol=/@var_cache	0 0

# /dev/nvme0n1p1
UUID=8C41-593A      	/efi      	vfat      	rw,relatime,fmask=0022,dmask=0022,codepage=437,iocharset=ascii,shortname=mixed,utf8,errors=remount-ro	0 2

# /.swap/swapfile
/.swap/swapfile		none		swap		defaults	0 0
||


pacstrap -i /mnt base base-devel linux linux-firmware git wget curl btrfs-progs neovim networkmanager intel-ucode/amd-ucode man nftables iptables-nft 
genfstab -U /mnt >> /mnt/etc/fstab
# control all <options> specially for swap subvol
cat /mnt/etc/fstab

ln -sf /usr/share/zoneinfo/CET /etc/localtime
hwclock --systohc
nvim /etc/locale.gen
locale-gen
nvim /etc/locale.conf
nvim /etc/vconsole.conf
echo "fgk" >> /etc/hostname
nvim /etc/hosts
||
127.0.0.1  localhost
::1        localhost
127.0.0.1  fgk
||
mkinitcpio -P


# you can choose refind or grub
# gurb
pacman -S grub grub-btrfs inotify-tools
grub-install --target=x86_64-efi --efi-directory=/efi --bootloader-id=GRUB
grub-mkconfig -o /boot/grub/grub.cfg

# refind
pacman -S refind
refind-install --alldrivers
nvim /efi/EFI/refind/refind.conf
# finde arch linux and change it to look like this
# if you use amd cpu then change intel-ucode.img to amd-ucode.img
||
menuentry "Arch Linux" {
    icon     /EFI/refind/icons/os_arch.png
    volume   "Arch Linux"
    loader   /@/boot/vmlinuz-linux
    initrd   /@/boot/initramfs-linux.img
    options  "root=PARTUUID=5028fa50-0079-4c40-b240-abfaf28693ea rw add_efi_memmap rootflags=subvol=@ initrd=@\boot\intel-ucode.img"
    submenuentry "Boot using fallback initramfs" {
        initrd /boot/initramfs-linux-fallback.img
    }
    submenuentry "Boot to terminal" {
        add_options "systemd.unit=multi-user.target"
    }
    disabled
}
||
nvim /boot/refind_linux.conf
# and fix 
||
"Boot with standard options"  "root=/dev/nvme0n1p2 rw add_efi_memmap rootflags=subvol=@"
"Boot to single-user mode"    "root=/dev/nvme0n1p2 rw add_efi_memmap rootflags=subvol=@ single"
"Boot with minimal options"   "ro root=/dev/nvme0n1p2"
||


passwd
systemctl enable NetworkManager
systemctl enable nftables
exit
swapoff /mnt/swap/swapfile
umount -R /mnt 
reboot

chsh root
# add to "ExecStart=..." in end "-t"
systemctl edit --full grub-btrfsd
systemctl enable grub-btrfsd
timedatectl set-ntp true
nvim /etc/pacman.conf 
pacman -Syu flatpak blueman bluez fzf zip unzip intel-gpu-tools intel-compute-runtime intel-graphics-compiler mesa bc jq speedcrunch udiskie kitty mpv bemenu telegram-desktop qbittorrent waybar imv grim slurp gimp evince texstudio keepassxc libreoffice-still firefox thunderbird steam prismlauncher hyprcursor breeze breeze-gtk breeze-icons ttf-noto-nerd noto-fonts noto-fonts-emoji noto-fonts-cjk wine winetricks fuse htop hyprland gamemode tmux xdg-desktop-portal-hyprland polkit-kde-agent polkit qemu virt-manager qemu-full dnsmasq bridge-utils fastfetch mako ripgrep eza hyprpaper exa ncdu jre8-openjdk jre21-openjdk jre17-openjdk nwg-look npm pipewire pipewire-pulse pipewire-alsa pipewire-jack wireplumber qt5-wayland qt6-wayland wl-clipboard cliphist

systemctl enable libvirtd

systemctl enable bluetooth
nvim /etc/bluetooth/main.conf 
# set "MultiProfile" to "multiple" 
||
[General]
MultiProfile=multiple
||

echo "vm.max_map_count = 2147483642" >> /etc/sysctl.d/80-gamecompatibility.conf

# snapper 
pacman -S snapper
umount /.snapshots
rm -fr .snapshots
snapper -c root create-config /
btrfs subvolume delete /.snapshots 
mkdir /.snapshots/
mount -o noatime,compress=zstd,subvolume=@.snapshots /dev/nvme0n1p2 /.snapshots
nvim /etc/snapper/configs/root
# look at achwiki


# put '!' behind debug flag in makepkg.cfg like hire:
# OPTIONS=(strip docs !libtool !staticlibs emptydirs zipman purge !debug !lto)
nvim /etc/makepkg.cfg

#in user
git clone https://aur.archlinux.org/yay.git
cd yay 
makepkg -si
cd ..
rm -fr yay

# for timeshift on wayland 
pacman -S xorg-xhost 

useradd -mG wheel,libvirt flekgekei -s /bin/zsh
passwd flekgekei

# for laptops 
echo -e "\nHandleLidSwitch=ignore" >> /etc/systemd/logind.conf

# in user
yay -S timeshift-autosnap

### for my dotfiles

sudo setcap cap_perfmon=+ep /usr/bin/intel_gpu_top

sudo pacman -S texlive

systemctl --user enable syncthing.service

yay -S ctpv coppwr pwvucontrol

ysy -S qt5-styleplugins qt6gtk2
sudo pacman -S qt6ct qt5ct

yay -S  megasync-bin


yay -S protonup-qt-bin

# hamachi 
yay -S haguichi 
# you can also do this
sudo systemctl enable logmein-hamachi.service
sudo nvim /etc/systemd/system/multi-user.target.wants/logmein-hamachi.service
# make hamachi start before nftables 
||
[Unit]
Description=LogMeIn Hamachi daemon
After=local-fs.target network.target
Before=nftables.service

[Service]
ExecStart=/opt/logmein-hamachi/bin/hamachid
Type=forking

[Install]
WantedBy=multi-user.target
||
sudo nvim /etc/nftables.conf
# this to inet chain
||
iif ham0 accept comment "allow hamachi"
||


# add refind setings
# secure boot in refind 
yay -S shim-signed
sudo pacman -S sbsigntools 
su 
refind-install --alldrivers --shim /usr/share/shim-signed/shimx64.efi --localkeys --yes
sbsign --key /etc/refind.d/keys/refind_local.key --cert /etc/refind.d/keys/refind_local.crt --output /boot/vmlinuz-linux /boot/vmlinuz-linux
# https://www.rodsbooks.com/refind/secureboot.html
# automate kernel signing 
nvim /etc/initcpio/post/kernel-sbsign
|| https://wiki.archlinux.org/title/Unified_Extensible_Firmware_Interface/Secure_Boot#Signing_the_kernel_with_a_mkinitcpio_post_hook
#!/usr/bin/env bash

kernel="$1"
[[ -n "$kernel" ]] || exit 0

# use already installed kernel if it exists
[[ ! -f "$KERNELDESTINATION" ]] || kernel="$KERNELDESTINATION"

keypairs=(/etc/refind.d/keys/refind_local.key /etc/refind.d/keys/refind_local.crt)

for (( i=0; i<${#keypairs[@]}; i+=2 )); do
    key="${keypairs[$i]}" cert="${keypairs[(( i + 1 ))]}"
    if ! sbverify --cert "$cert" "$kernel" &>/dev/null; then
        sbsign --key "$key" --cert "$cert" --output "$kernel" "$kernel"
    fi
done
||
chmod +x /etc/initcpio/post/kernel-sbsign
# automate refind updating
nvim /etc/pacman.d/hooks/refind.hook
|| https://wiki.archlinux.org/title/REFInd#Pacman_hook
[Trigger]
Operation=Upgrade
Type=Package
Target=refind

[Action]
Description = Updating rEFInd on ESP
When=PostTransaction
Exec=/usr/bin/refind-install --alldrivers --shim /usr/share/shim-signed/shimx64.efi --localkeys --yes
||
# install normal theme
cd /efi/EFI/refind/
mkdir themes
cd theme
# clone your theme 
git clone https://github.com/bobafetthotmail/refind-theme-regular
# add "include themes/refind-theme-regular/theme.conf"
nvim /efi/EFI/refind/refind.conf

# install utilities with pacman hooks
# if you don't use secureboot just replace all sbsign commands by cp commands (see arch wiki)
# memtest86+
sudo pacman -S memtest86+-efi
sudo sbsign --key /etc/refind.d/keys/refind_local.key --cert /etc/refind.d/keys/refind_local.crt /boot/memtest86+/memtest.efi --output /efi/EFI/tools/memtest86.efi
nvim /etc/pacman.d/hooks/memtest86+.hook
||
[Trigger]
Operation=Upgrade
Type=Package
Target=memtest86+-efi

[Action]
Description = Updating memtest86+ on ESP
When=PostTransaction
Exec=/usr/bin/sbsign --key /etc/refind.d/keys/refind_local.key --cert /etc/refind.d/keys/refind_local.crt /boot/memtest86+/memtest.efi --output /efi/EFI/tools/memtest86.efi
Depends=sbsigntools
||
# UEFI shell
sudo pacman -S edk2-shell
sudo sbsign --key /etc/refind.d/keys/refind_local.key --cert /etc/refind.d/keys/refind_local.crt /usr/share/edk2-shell/x64/Shell_Full.efi --output /efi/EFI/tools/shell.efi
nvim /etc/pacman.d/hooks/edk2-shell.hook
||
[Trigger]
Operation=Upgrade
Type=Package
Target=edk2-shell

[Action]
Description = Updating edk2-shell on ESP
When=PostTransaction
Exec=/usr/bin/sbsign --key /etc/refind.d/keys/refind_local.key --cert /etc/refind.d/keys/refind_local.crt /usr/share/edk2-shell/x64/Shell_Full.efi --output /efi/EFI/tools/shell.efi
Depends=sbsigntools
||
